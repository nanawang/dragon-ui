@mixin button-theme($color, $background, $border, $type: '') {
  $active-background: darken($background, 4%);
  $active-border: darken($border, 4%);
  $hover-background: rgba($background, .8);
  $hover-border: rgba($border, .8);
  $disable-background: rgba($background, .5);
  $disable-border: rgba($border, .5);

  border-color: $border;
  color: $color;
  background: $background;

  &:not(.is-loading):hover {
    background-color: $hover-background;
    border-color: $hover-border;
    color: $color;
    @if ($type == default) {
      background-color: $--color-white;
      border-color: $--color-primary;
      color: $--color-primary;
    }
  }

  &:not(.is-loading):focus,
  &:not(.is-loading):active {
    background-color: $active-background;
    border-color: $active-border;
    color: $color;
    @if ($type == default) {
      background-color: $--color-white;
      border-color: $--color-primary;
      color: $--color-primary;
    }
  }

  &.is-disabled,
  &:not(.is-loading):disabled {
    cursor: not-allowed;

    &.is-ghost {
      color: $--button-ghost-disabled-color;
      border-color: $--button-ghost-disabled-border;

      &:focus,
      &:hover {
        color: $--button-ghost-disabled-color;
        border-color: $--button-ghost-disabled-border;
      }
    }

    &:focus,
    &.is-focus,
    &:hover {
      background-color: $background;
      border-color: $border;
      color: $color;
    }
  }
}

@mixin button-size($height, $padding, $font-size, $border-radius) {
  padding: $padding;
  font-size: $font-size;
  height: $height;
  line-height: $height - 2;

  &.is-radius {
    border-radius: $border-radius;
  }

  &.is-round {
    border-radius: 1000px;
  }

  &.is-circle {
    width: $height;
    height: $height;
    padding: 0;
    border-radius: 50%;
  }

  .ui-icon + span,
  span + .ui-icon {
    margin-left: $height / 10;
  }
}

@include b(button) {
  display: inline-block;
  margin: 0;
  @include button-size($--button-height, 0 $--padding-size-16, $--button-fontSize, $--border-radius-base); // default button size

  font-weight: normal;
  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
  background-image: none;
  border: $--border-base;
  cursor: pointer;
  outline: 0;
  text-decoration: none;
  -webkit-appearance: none;
  user-select: none;
  transition: background-color 300ms ease-out, border-color 300ms ease-out;

  & + & {
    &:not(.is-block) {
      margin-left: 10px;
    }
  }

  /* disabled Button */
  &.is-disabled,
  &:disabled {
    cursor: not-allowed;
    opacity: .65;
  }

  /* block Button */
  &.is-block {
    width: 100%;
    display: block;
  }

  &.is-loading {
    cursor: default;
    opacity: .65;

    @include b(icon) {
      animation: rotate360 1s linear infinite;
    }
  }

  &.is-ghost {
    background: transparent !important;
    border-color: #fff;
    color: #fff;
  }

  /* Button sizes */
  @include m(xl) {
    @include button-size($--button-height-xl, 0 12px, $--button-fontSize-xl, $--border-radius-base);
  }

  @include m(lg) {
    @include button-size($--button-height-lg, 0 12px, $--button-fontSize-lg, $--border-radius-base);
  }

  @include m(sm) {
    @include button-size($--button-height-sm, 0 8px, $--button-fontSize-sm, $--border-radius-base);
  }

  @include m(xs) {
    @include button-size($--button-height-xs, 0 8px, $--button-fontSize-xs, $--border-radius-base);
  }

  /* Button themes */
  @include m(default) {
    @include button-theme($--button-default-color, $--button-default-bg, $--button-default-border, default);

    &.is-ghost {
      @include button-theme($--color-white, transparent, $--color-white, default);
    }
  }

  @include m(primary) {
    @include button-theme($--button-info-color, $--button-info-bg, $--button-info-border);

    &.is-ghost {
      @include button-theme($--color-info, transparent, $--color-info);
    }
  }

  @include m(danger) {
    @include button-theme($--button-danger-color, $--button-danger-bg, $--button-danger-border);

    &.is-ghost {
      @include button-theme($--color-danger, transparent, $--color-danger);
    }
  }
}

@include b(btn-group) {
  @include clearfix;

  display: inline-block;
  vertical-align: middle;

  & > .za-button {
    float: left;
    position: relative;

    & + .za-button {
      margin-left: 0;
    }

    &.is-disabled {
      z-index: 1;
    }

    &:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    &:first-child:last-child {
      border-radius: $--border-radius-base;

      &.is-round {
        border-radius: 20px;
      }

      &.is-circle {
        border-radius: 50%;
      }
    }

    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }

    &:not(:last-child) {
      margin-right: -1px;
    }

    &:hover,
    &:focus,
    &:active {
      z-index: 1;
    }
  }

  @each $type in (default, primary, danger) {
    .za-button--#{$type} {
      &:first-child {
        border-right-color: rgba($--color-white, 0.5);
      }

      &:last-child {
        border-left-color: rgba($--color-white, 0.5);
      }

      &:not(:first-child):not(:last-child) {
        border-left-color: rgba($--color-white, 0.5);
        border-right-color: rgba($--color-white, 0.5);
      }
    }
  }
}
